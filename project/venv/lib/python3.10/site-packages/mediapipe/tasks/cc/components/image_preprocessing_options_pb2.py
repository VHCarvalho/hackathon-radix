# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mediapipe/tasks/cc/components/image_preprocessing_options.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from mediapipe.calculators.tensor import image_to_tensor_calculator_pb2 as mediapipe_dot_calculators_dot_tensor_dot_image__to__tensor__calculator__pb2
from mediapipe.framework import calculator_pb2 as mediapipe_dot_framework_dot_calculator__pb2
try:
  mediapipe_dot_framework_dot_calculator__options__pb2 = mediapipe_dot_framework_dot_calculator__pb2.mediapipe_dot_framework_dot_calculator__options__pb2
except AttributeError:
  mediapipe_dot_framework_dot_calculator__options__pb2 = mediapipe_dot_framework_dot_calculator__pb2.mediapipe.framework.calculator_options_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='mediapipe/tasks/cc/components/image_preprocessing_options.proto',
  package='mediapipe.tasks',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n?mediapipe/tasks/cc/components/image_preprocessing_options.proto\x12\x0fmediapipe.tasks\x1a=mediapipe/calculators/tensor/image_to_tensor_calculator.proto\x1a$mediapipe/framework/calculator.proto\"\xc2\x01\n\x19ImagePreprocessingOptions\x12J\n\x17image_to_tensor_options\x18\x01 \x01(\x0b\x32).mediapipe.ImageToTensorCalculatorOptions2Y\n\x03\x65xt\x12\x1c.mediapipe.CalculatorOptions\x18\x84\xf2\xed\xd9\x01 \x01(\x0b\x32*.mediapipe.tasks.ImagePreprocessingOptions')
  ,
  dependencies=[mediapipe_dot_calculators_dot_tensor_dot_image__to__tensor__calculator__pb2.DESCRIPTOR,mediapipe_dot_framework_dot_calculator__pb2.DESCRIPTOR,])




_IMAGEPREPROCESSINGOPTIONS = _descriptor.Descriptor(
  name='ImagePreprocessingOptions',
  full_name='mediapipe.tasks.ImagePreprocessingOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image_to_tensor_options', full_name='mediapipe.tasks.ImagePreprocessingOptions.image_to_tensor_options', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
    _descriptor.FieldDescriptor(
      name='ext', full_name='mediapipe.tasks.ImagePreprocessingOptions.ext', index=0,
      number=456882436, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=True, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=186,
  serialized_end=380,
)

_IMAGEPREPROCESSINGOPTIONS.fields_by_name['image_to_tensor_options'].message_type = mediapipe_dot_calculators_dot_tensor_dot_image__to__tensor__calculator__pb2._IMAGETOTENSORCALCULATOROPTIONS
DESCRIPTOR.message_types_by_name['ImagePreprocessingOptions'] = _IMAGEPREPROCESSINGOPTIONS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ImagePreprocessingOptions = _reflection.GeneratedProtocolMessageType('ImagePreprocessingOptions', (_message.Message,), dict(
  DESCRIPTOR = _IMAGEPREPROCESSINGOPTIONS,
  __module__ = 'mediapipe.tasks.cc.components.image_preprocessing_options_pb2'
  # @@protoc_insertion_point(class_scope:mediapipe.tasks.ImagePreprocessingOptions)
  ))
_sym_db.RegisterMessage(ImagePreprocessingOptions)

_IMAGEPREPROCESSINGOPTIONS.extensions_by_name['ext'].message_type = _IMAGEPREPROCESSINGOPTIONS
mediapipe_dot_framework_dot_calculator__options__pb2.CalculatorOptions.RegisterExtension(_IMAGEPREPROCESSINGOPTIONS.extensions_by_name['ext'])

# @@protoc_insertion_point(module_scope)
